variables:
  NOME: $CI_PROJECT_TITLE - Time SupplyChain
  DEPLOY: git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git
  DIRETORIO: $CI_PROJECT_NAME
  SERVIDOR: 172.19.12.57
  PORTA: 3014
  PORTAH: 4014

stages:
  - qualidade
  - firewall
  - diretorio
  - variaveis
  - deploy
  - notificacao
  - manutencao

sonarqube-check:
  stage: qualidade
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    variables:
      - $EXECUTAR == "qa"

deploy-firewall:
  stage: firewall
  tags: 
    - dklan02
  only:
    variables:
      - $EXECUTAR == "fw"
  script:
      - /usr/local/bin/./deploy-firewall.sh "$PORTA" "$PORTAH"


deploy-diretorio-prd:
  stage: diretorio
  tags: 
    - dklan02
  only:
    variables:
      - $EXECUTAR == "prd"
  script:
      - /usr/local/bin/./deploy-diretoriov2.sh "$EXECUTAR" "$DIRETORIO" "$DEPLOY"

deploy-diretorio-hmg:
  stage: diretorio
  tags: 
    - dklan02
  only:
    variables:
      - $EXECUTAR == "hmg"
  script:
      - /usr/local/bin/./deploy-diretoriov2.sh "$EXECUTAR" "$DIRETORIO" "$DEPLOY"

Env hmg Variavel:
  stage: variaveis
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "hmg"
  script:
    - cat $HMGVARIAVEIS > /var/conteiner/$EXECUTAR/$DIRETORIO/.env

Env prd Variavel:
  stage: variaveis
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "prd"
  script:
    - cat $PRDVARIAVEIS > /var/conteiner/$EXECUTAR/$DIRETORIO/.env


deploy-docker-prd:
  stage: deploy
  tags: 
    - dklan02
  only:
    variables:
      - $EXECUTAR == "prd"
  script:
      - /usr/local/bin/./deploy-docker.sh "$EXECUTAR" "$DIRETORIO" "$PORTA"
  
deploy-docker-hmg:
  stage: deploy
  tags: 
    - dklan02
  only:
    variables:
      - $EXECUTAR == "hmg"
  script:
      - /usr/local/bin/./deploy-docker.sh "$EXECUTAR" "$DIRETORIO" "$PORTA"

verificar-deploy-prd:
  stage: deploy
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "prd"
  dependencies:
    - deploy-docker-prd 
  script:
    - sleep 20
    - curl -v http://"$SERVIDOR":"$PORTA"
    - echo $?

verificar-deploy-hmg:
  stage: deploy
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "hmg"
  dependencies:
    - deploy-docker-hmg 
  script:
    - sleep 20
    - curl -v http://"$SERVIDOR":"$PORTAH"
    - echo $?

Notificar Sucesso prd:
  stage: notificacao
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "prd"
  when: on_success
  script:
    - /usr/local/bin/./sap-notifica-OK-workflow.sh "$EXECUTAR" "$NOME" "$PORTA" "$SERVIDOR" "$IDPROJETO"

Notificar Falha prd:
  stage: notificacao
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "prd"
  when: on_failure
  script:
    - /usr/local/bin/./sap-notifica-Falha-workflow.sh "$EXECUTAR" "$NOME" "$IDPROJETO"

Notificar Sucesso hmg:
  stage: notificacao
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "hmg"
  when: on_success
  script:
    - /usr/local/bin/./sap-notifica-OK-workflow.sh "$EXECUTAR" "$NOME" "$PORTA" "$SERVIDOR" "$IDPROJETO"

Notificar Falha hmg:
  stage: notificacao
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "hmg"
  when: on_failure
  script:
      - /usr/local/bin/./sap-notifica-Falha-workflow.sh "$EXECUTAR" "$NOME" "$IDPROJETO"

start container hmg:
  stage: manutencao
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "hmgstart"
  script:
    - sudo docker stop hmg_"$DIRETORIO"
    - sudo docker start hmg_"$DIRETORIO"
    - sudo docker ps

stop container hmg:
  stage: manutencao
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "hmgstop"
  script:
    - sudo docker stop hmg_"$DIRETORIO"
    - sudo docker ps

start container prd:
  stage: manutencao
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "prdstart"
  script:
    - sudo docker stop "$DIRETORIO"
    - sudo docker start "$DIRETORIO"
    - sudo docker ps

stop container prd:
  stage: manutencao
  tags:
    - dklan02
  only:
    variables:
      - $EXECUTAR == "prdstop"
  script:
    - sudo docker stop "$DIRETORIO"
    - sudo docker ps